import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

public class HMACKeyGenerator {

    public static void main(String[] args) throws NoSuchAlgorithmException {
        // Initialize KeyGenerator with HMAC algorithm and the desired key size
        KeyGenerator keyGen = KeyGenerator.getInstance("HmacSHA256");

        // Securely generate a secret key
        SecureRandom secureRandom = new SecureRandom();
        keyGen.init(secureRandom);

        // Generate the secret key
        SecretKey secretKey = keyGen.generateKey();

        // Convert the key to a 64-character hexadecimal string
        String secret = bytesToHex(secretKey.getEncoded());

        System.out.print("HMAC Key: " + secret);
    }

    // Method to convert a byte array to a hexadecimal string
    public static String bytesToHex(byte[] bytes) {
        StringBuilder hexString = new StringBuilder(2 * bytes.length);
        for (byte b : bytes) {
            String hex = Integer.toHexString(0xff & b);
            if (hex.length() == 1) {
                hexString.append('0');
            }
            hexString.append(hex);
        }
        return hexString.toString();
    }
}
